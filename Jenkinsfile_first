pipeline{
    agent none
    options { 
        skipDefaultCheckout() 
        }
    environment { 
        VERSION = "1.0.${BUILD_NUMBER}" 
    }
    stages{
        stage("checkout code to machine"){
            agent any
            steps{
                echo "========executing A========"
                echo "checkout code from scm to localhost"
                git 'https://github.com/pypy-a/reader.git'
                sh 'sed -i -e "s/1.0.0/$VERSION/" setup.py'
                sh '''
                    cd reader
                    sed -i -e "s/1.0.0/$VERSION/" __init__.py
                '''
            }
            post{
                always{
                    echo "========Checking========"
                }
                success{
                    echo "========A executed successfully========"
                }
                failure{
                    echo "========A execution failed========"
                }
            }
        }
        stage("build app") {
            agent {
                docker {
                    image 'python:3.7-alpine'
                }
            }
            steps{
                echo "========executing B========"
                echo "build app"
                sh '''
                   python3 setup.py sdist bdist_wheel
                '''
                stash(name: 'reader_artifacts', includes: 'dist/*')
            }
            post{
                always{
                    echo "========always========"
                }
                success{
                    echo "========B executed successfully========"
                }
                failure{
                    echo "========B execution failed========"
                }
            }
        }
        stage("publish app to repo") {
            agent {
                docker {
                    image 'python_twine'
                }
            }
            steps{
                echo "========executing C========"
                echo "unstash and publish to pypi"
                dir('artifacts') {
                    unstash name: 'reader_artifacts'
                    sh "ls -la ${pwd()}"
                    sh 'twine --version'
                }
                
            }
            post{
                always{
                    echo "========always========"
                    sh 'twine check artifacts/dist/*'
                }
                success{
                    echo "========C executed successfully========"
                    withCredentials([usernamePassword(credentialsId: 'pypi_key', passwordVariable: 'USERPASS', usernameVariable: 'USERNAME')]) {
                        sh 'twine upload -u "$USERNAME" -p "$USERPASS" artifacts/dist/*'
                    }
                }
                failure{
                    echo "========C execution failed========"
                }
            }
        }
        stage("Clean workspace before build starts") {
            agent any
            steps {
                echo "Cleaning up workspace"
                cleanWs()
            }
            post{
                always{
                    echo "========always========"
                }
                success{
                    echo "========D executed successfully========"
                }
                failure{
                    echo "========D execution failed========"
                }
            }
        }
    }
}
